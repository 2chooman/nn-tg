import React from 'react';
import ReactDOM from 'react-dom/client';
import {
  HashRouter,
  Routes,
  Route,
  Link,
  useNavigate,
} from 'react-router-dom';

const categories = [
  { icon: 'üö®', label: '–ö—Ä–∞–∂–∏', selected: true },
  { icon: 'üíä', label: '–ù–∞—Ä–∫–æ—Ç–∏–∫–∏' },
  { icon: 'üí≥', label: '–ú–æ—à–µ–Ω–Ω–∏—á–µ—Å—Ç–≤–æ' },
  { icon: 'üöó', label: '–î–¢–ü' },
  { icon: 'üí∞', label: '–≠–∫–æ–Ω–æ–º–∏–∫–∞' },
  { icon: '‚ö†Ô∏è', label: '–•—É–ª–∏–≥–∞–Ω—Å—Ç–≤–æ' },
];

const lawyers = [
  { name: '–ê–Ω–Ω–∞ –ö–æ–∑–ª–æ–≤–∞', role: '–ê–¥–≤–æ–∫–∞—Ç –ø–æ –∫—Ä–∞–∂–∞–º', status: 'online' },
  { name: '–°–µ—Ä–≥–µ–π –ù–æ–≤–∏–∫–æ–≤', role: '–ê–¥–≤–æ–∫–∞—Ç –ø–æ –∫—Ä–∞–∂–∞–º', status: '–æ—Ç 3 000 ‚ÇΩ/—á–∞—Å' },
  { name: '–î–º–∏—Ç—Ä–∏–π –°–º–∏—Ä–Ω–æ–≤', role: '–ê–¥–≤–æ–∫–∞—Ç –ø–æ –∫—Ä–∞–∂–∞–º', status: '–æ—Ç 4 000 ‚ÇΩ/—á–∞—Å' },
  { name: 'Elena Morozova', role: '–ê–¥–≤–æ–∫–∞—Ç –ø–æ –∫—Ä–∞–∂–∞–º', status: '–æ—Ç 3 000 ‚ÇΩ/—á–∞—Å' },
];

function CategoryButton({ icon, label, selected }) {
  return (
    <button className={selected ? 'selected' : ''}>
      <span role="img" aria-label={label} className="icon">
        {icon}
      </span>
      {label}
    </button>
  );
}

function LawyerItem({ name, role, status }) {
  return (
    <li className="item">
      <div className="avatar" />
      <div className="info">
        <p className="name">{name}</p>
        <p className="role">{role}</p>
        <div className="status">
          <span className="status-dot" />
          <span>{status}</span>
        </div>
      </div>
      <a href="#" className="btn-chat">
        –ß–∞—Ç
      </a>
    </li>
  );
}

function Home() {
  return (
    <div className="home">
      <div className="container">
        <h1>–ù–∞–π–¥–∏—Ç–µ —é—Ä–∏—Å—Ç–∞ –∑–∞ 1 –º–∏–Ω—É—Ç—É</h1>
        <Link to="/categories" className="btn">–ü–æ–¥–æ–±—Ä–∞—Ç—å —é—Ä–∏—Å—Ç–∞</Link>
        <div className="checkbox">
          <input type="checkbox" id="consent" />
          <label htmlFor="consent">–ú–Ω–µ 18+ –∏ —è —Ä–µ–∑–∏–¥–µ–Ω—Ç –†–§</label>
        </div>
      </div>
    </div>
  );
}

function Categories() {
  const navigate = useNavigate();
  return (
    <div className="categories-page">
      <h1>–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é</h1>
      <div className="categories">
        {categories.map((c) => (
          <CategoryButton key={c.label} {...c} />
        ))}
      </div>
      <div className="footer">
        <button className="btn" onClick={() => navigate('/search')}>–ü–æ–∫–∞–∑–∞—Ç—å —é—Ä–∏—Å—Ç–æ–≤</button>
      </div>
    </div>
  );
}

function Search() {
  const navigate = useNavigate();
  return (
    <div className="search-page">
      <div className="card">
        <h1>–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–æ–∏—Å–∫–∞</h1>
        <div className="field">
          <label htmlFor="city">–ì–æ—Ä–æ–¥</label>
          <div className="input-group">
            <span className="icon" role="img" aria-label="–ì–æ—Ä–æ–¥">üìç</span>
            <input id="city" placeholder="–í–≤–µ–¥–∏—Ç–µ –≥–æ—Ä–æ–¥" />
          </div>
        </div>
        <div className="field">
          <label>–î–∏–∞–ø–∞–∑–æ–Ω —Ü–µ–Ω—ã</label>
          <div className="range-group">
            <input type="number" placeholder="–û—Ç" />
            <input type="number" placeholder="–î–æ ‚ÇΩ" />
          </div>
        </div>
        <div className="checkbox">
          <input type="checkbox" id="with-fee" />
          <label htmlFor="with-fee">–ü–æ–∫–∞–∑—ã–≤–∞—Ç—å —é—Ä–∏—Å—Ç–æ–≤ —Å –≥–æ–Ω–æ—Ä–∞—Ä–æ–º</label>
        </div>
        <button className="btn" onClick={() => navigate('/list')}>–ü–æ–∫–∞–∑–∞—Ç—å 124 —é—Ä–∏—Å—Ç–∞</button>
      </div>
    </div>
  );
}

function List() {
  return (
    <div className="list-page">
      <div className="container">
        <h1>–Æ—Ä–∏—Å—Ç—ã</h1>
        <div className="subtitle">–ö—Ä–∞–∂–∏ ¬∑ –ú–æ—Å–∫–≤–∞</div>
        <div className="card">
          <ul className="list">
            {lawyers.map((l) => (
              <LawyerItem key={l.name} {...l} />
            ))}
          </ul>
        </div>
      </div>
    </div>
  );
}

function App() {
  return (
    <HashRouter>
      <Routes>
        <Route path="/" element={<Home />} />
        <Route path="/categories" element={<Categories />} />
        <Route path="/search" element={<Search />} />
        <Route path="/list" element={<List />} />
      </Routes>
    </HashRouter>
  );
}

ReactDOM.createRoot(document.getElementById('root')).render(<App />);
